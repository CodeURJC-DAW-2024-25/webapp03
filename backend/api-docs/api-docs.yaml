openapi: 3.0.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: https://localhost:8443
  description: Generated server url
paths:
  /api/users/{id}:
    get:
      tags:
      - user-rest-controller
      operationId: showUserProfile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserNoImageDTO"
    put:
      tags:
      - user-rest-controller
      operationId: editUserProfile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserNoImageDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
    delete:
      tags:
      - user-rest-controller
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserNoImageDTO"
  /api/courses/{id}:
    get:
      tags:
      - course-rest-controller
      operationId: getCourse
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CourseBasicDTO"
    put:
      tags:
      - course-rest-controller
      operationId: editCourse
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CourseBasicDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CourseBasicDTO"
    delete:
      tags:
      - course-rest-controller
      operationId: deleteCourse
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CourseBasicDTO"
  /api/courses/{id}/image:
    get:
      tags:
      - course-rest-controller
      operationId: getCourseImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
      - course-rest-controller
      operationId: replaceCourseImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
              required:
              - imageFile
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - course-rest-controller
      operationId: createCourseImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
              required:
              - imageFile
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - course-rest-controller
      operationId: deleteCourseImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/users/:
    get:
      tags:
      - user-rest-controller
      operationId: showUsers
      parameters:
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelUserNoImageDTO"
    post:
      tags:
      - user-rest-controller
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserNoImageDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserNoImageDTO"
  /api/materials/courses/{id}/:
    post:
      tags:
      - material-rest-controller
      operationId: uploadFile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
              - file
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/MaterialBasicDTO"
  /api/courses/{courseId}/comments:
    get:
      tags:
      - comment-rest-controller
      operationId: getCommentsByCourse
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CommentBasicDTO"
    post:
      tags:
      - comment-rest-controller
      operationId: createComment
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: text
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/courses/:
    get:
      tags:
      - course-rest-controller
      operationId: getCourses
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
          default: id
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelCourseBasicDTO"
    post:
      tags:
      - course-rest-controller
      operationId: createCourse
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CourseBasicDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CourseBasicDTO"
  /api/auth/refresh:
    post:
      tags:
      - login-controller
      operationId: refreshToken
      parameters:
      - name: RefreshToken
        in: cookie
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/auth/logout:
    post:
      tags:
      - login-controller
      operationId: logOut
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/auth/login:
    post:
      tags:
      - login-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/users/{id}/image:
    get:
      tags:
      - user-rest-controller
      operationId: getProfileImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/materials/courses/{courseId}/materials/{materialId}/:
    get:
      tags:
      - material-rest-controller
      operationId: downloadFile
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: materialId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: byte
    delete:
      tags:
      - material-rest-controller
      operationId: deleteFile
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: materialId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/materials/courses/{courseId}/load:
    get:
      tags:
      - material-rest-controller
      operationId: loadMoreMaterials
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelMaterialBasicDTO"
  /api/courses/{courseId}/comments/{commentId}:
    get:
      tags:
      - comment-rest-controller
      operationId: getCommentById
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: commentId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - comment-rest-controller
      operationId: deleteComment
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: commentId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/courses/{courseId}/comments/paginated:
    get:
      tags:
      - comment-rest-controller
      operationId: getPaginatedComments
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedModelCommentBasicDTO"
  /api/courses/chartdata:
    get:
      tags:
      - course-rest-controller
      operationId: getChartData
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
components:
  schemas:
    CommentBasicDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date
        text:
          type: string
    CourseBasicDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        image:
          type: boolean
        numberOfUsers:
          type: integer
          format: int32
        tags:
          type: array
          items:
            type: string
    UserNoImageDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        password:
          type: string
        courses:
          type: array
          items:
            $ref: "#/components/schemas/CourseBasicDTO"
        comments:
          type: array
          items:
            $ref: "#/components/schemas/CommentBasicDTO"
        roles:
          type: array
          items:
            type: string
    MaterialBasicDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        type:
          type: string
        url:
          type: string
        file:
          type: object
          properties:
            binaryStream:
              type: object
    AuthResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - SUCCESS
          - FAILURE
        message:
          type: string
        error:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    Pageable:
      type: object
      properties:
        page:
          type: integer
          format: int32
          minimum: 0
        size:
          type: integer
          format: int32
          minimum: 1
        sort:
          type: array
          items:
            type: string
    PageMetadata:
      type: object
      properties:
        size:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
    PagedModelUserNoImageDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/UserNoImageDTO"
        page:
          $ref: "#/components/schemas/PageMetadata"
    PagedModelMaterialBasicDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/MaterialBasicDTO"
        page:
          $ref: "#/components/schemas/PageMetadata"
    PagedModelCommentBasicDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/CommentBasicDTO"
        page:
          $ref: "#/components/schemas/PageMetadata"
    PagedModelCourseBasicDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/CourseBasicDTO"
        page:
          $ref: "#/components/schemas/PageMetadata"
